# Loco configuration file

# Application logging configuration
[logger]
# Enable or disable logging.
enable = true
# Enable pretty backtrace (sets RUST_BACKTRACE=1)
pretty_backtrace = true
# Log level: options: trace, debug, info, warn, or error.
level = "debug"
# Define the logging format: options: compact, pretty, or json
format = "pretty"
# Override logger filters to see all third-party libraries (uncomment to enable).
# override_filter = "trace"

# Web server configuration
[server]
# Port on which the server will listen. The server binding is 0.0.0.0:{PORT}
port = 5150
# The UI hostname or IP address that mailers will point to.
host = "http://localhost"

# Middleware configuration
[middlewares.etag]
enable = true

[middlewares.limit_payload]
enable = true
body_limit = "5mb"

[middlewares.secure_headers]
preset = "github"

[middlewares.remote_ip]
enable = false
# trusted_proxies = ["ip range 1", "ip range 2"]

[middlewares.logger]
enable = true

[middlewares.catch_panic]
enable = true

[middlewares.timeout_request]
enable = false
timeout = 5000

[middlewares.cors]
enable = true
# allow_origins = ["https://loco.rs"]
# allow_headers = ["Content-Type"]
# allow_methods = ["POST"]
# max_age = 3600

# Static asset serving configuration
[server.static]
enable = false
must_exist = false
precompressed = false
folder.uri = "/static"
folder.path = "assets/static"
fallback = "assets/static/404.html"

# Client-side app static configuration (uncomment to enable)
# [server.static]
# enable = true
# must_exist = true
# precompressed = false
# folder.uri = "/"
# folder.path = "frontend/dist"
# fallback = "frontend/dist/index.html"

# Worker Configuration
[workers]
# Worker mode options:
#   - BackgroundQueue
#   - ForegroundBlocking
#   - BackgroundAsync
mode = "BackgroundAsync"

# Mailer Configuration
[mailer]
[mailer.smtp]
# Enable/Disable SMTP mailer
enable = true
# SMTP server host
host = "{{ get_env(name='MAILER_HOST', default='localhost') }}"
# SMTP server port
port = 1025
# Use secure connection (SSL/TLS)
secure = false
# auth.user = ""
# auth.password = ""

# Initializers Configuration (uncomment and configure as needed)
# [initializers.oauth2]
# authorization_code = [{ client_identifier = "google" }]

# Database Configuration
[database]
# Database connection URI
uri = "postgres://bulutgocer:pass@localhost:5432/matchmaker?sslmode=disable"
# Enable logging of SQL queries
enable_logging = false
# Timeout duration when acquiring a connection
connect_timeout = 500
# Idle duration before closing a connection
idle_timeout = 500
# Minimum number of connections for a pool
min_connections = 1
# Maximum number of connections for a pool
max_connections = 100
# Run migration up when application loaded
auto_migrate = true
# Truncate database when application loaded
dangerously_truncate = false
# Recreate schema when application loaded
dangerously_recreate = false

# Queue Configuration
[queue]
# Redis connection URI
uri = "redis://127.0.0.1"
# Dangerously flush all data in Redis on startup
dangerously_flush = false

# Authentication Configuration
[auth]
[jwt]
# Secret key for token generation and verification
secret = "muqbYMqkrtvwVE8II9q1"
# Token expiration time in seconds
expiration = 604800
[hash]
secret = "3wT7Kf8JmLq1Zx9Pn2GtHv6YvBcDdRt6"
